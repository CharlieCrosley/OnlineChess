{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charl\\\\Documents\\\\Code\\\\Web Dev\\\\Chess-Online\\\\chessproject\\\\frontend\\\\src\\\\pages\\\\Chess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GameContainer, GamePlayer, GameWrap } from \"./GameElements\";\nimport Board from \"../components/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chess = () => {\n  _s();\n\n  const [knightPosition, setPosition] = useState([0, 0]);\n  /* const [whitePieces, setWhitePosition] = useState({\r\n  castle1_w:[0,0],\r\n  knight1_w:[0,1],\r\n  bishop1_w:[0,2],\r\n  queen_w:[0,3],\r\n  king_w:[0,4],\r\n  castle2_w:[0,7],\r\n  knight2_w:[0,6],\r\n  bishop2_w:[0,5],\r\n  })\r\n  const [blackPieces, setBlackPosition] = useState({\r\n  castle1_b:[0,0],\r\n  knight1_b:[0,1],\r\n  bishop1_b:[0,2],\r\n  queen_b:[0,3],\r\n  king_b:[0,4],\r\n  castle2_b:[0,7],\r\n  knight2_b:[0,6],\r\n  bishop2_b:[0,5],\r\n  }) */\n\n  const changePosition = (x, y) => {\n    setPosition([x, y]);\n    /* setPosition(previousState => {\r\n    return { ...previousState, piece: [x, y] }\r\n    }); */\n  };\n\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: /*#__PURE__*/_jsxDEV(GamePlayer, {\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        knightPosition: knightPosition,\n        posHandler: changePosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chess, \"PMmnLvOYpFMWhp0FOx6dR8co81o=\");\n\n_c = Chess;\nexport default Chess;\n\nfunction connect() {\n  gameSocket.onopen = function open() {\n    console.log(\"WebSockets connection created.\");\n    gameSocket.send(JSON.stringify({\n      event: \"START\",\n      message: \"\"\n    }));\n  };\n\n  gameSocket.onclose = function (e) {\n    console.log(\"Socket is closed. Reconnect will be attempted in 1 second.\", e.reason);\n    setTimeout(function () {\n      connect();\n    }, 1000);\n  }; // Sending the info about the room\n\n\n  gameSocket.onmessage = function (e) {\n    let data = JSON.parse(e.data);\n    data = data[\"payload\"];\n    let message = data[\"message\"];\n    let event = data[\"event\"];\n\n    switch (event) {\n      case \"START\":\n        reset();\n        break;\n\n      case \"END\":\n        alert(message);\n        reset();\n        break;\n\n      case \"MOVE\":\n        if (message[\"player\"] != char_choice) {\n          make_move(message[\"index\"], message[\"player\"]);\n          myturn = true;\n          document.getElementById(\"alert_move\").style.display = \"inline\";\n        }\n\n        break;\n\n      default:\n        console.log(\"No event\");\n    }\n  };\n\n  if (gameSocket.readyState == WebSocket.OPEN) {\n    gameSocket.onopen();\n  }\n}\n\nconnect();\n\nvar _c;\n\n$RefreshReg$(_c, \"Chess\");","map":{"version":3,"names":["React","useState","GameContainer","GamePlayer","GameWrap","Board","Chess","knightPosition","setPosition","changePosition","x","y","connect","gameSocket","onopen","open","console","log","send","JSON","stringify","event","message","onclose","e","reason","setTimeout","onmessage","data","parse","reset","alert","char_choice","make_move","myturn","document","getElementById","style","display","readyState","WebSocket","OPEN"],"sources":["C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/src/pages/Chess.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GameContainer, GamePlayer, GameWrap } from \"./GameElements\";\r\nimport Board from \"../components/Board\";\r\n\r\nconst Chess = () => {\r\n    const [knightPosition, setPosition] = useState([0, 0]);\r\n    /* const [whitePieces, setWhitePosition] = useState({\r\n    castle1_w:[0,0],\r\n    knight1_w:[0,1],\r\n    bishop1_w:[0,2],\r\n    queen_w:[0,3],\r\n    king_w:[0,4],\r\n    castle2_w:[0,7],\r\n    knight2_w:[0,6],\r\n    bishop2_w:[0,5],\r\n  })\r\n  const [blackPieces, setBlackPosition] = useState({\r\n    castle1_b:[0,0],\r\n    knight1_b:[0,1],\r\n    bishop1_b:[0,2],\r\n    queen_b:[0,3],\r\n    king_b:[0,4],\r\n    castle2_b:[0,7],\r\n    knight2_b:[0,6],\r\n    bishop2_b:[0,5],\r\n  }) */\r\n    const changePosition = (x, y) => {\r\n        setPosition([x, y]);\r\n        /* setPosition(previousState => {\r\n      return { ...previousState, piece: [x, y] }\r\n    }); */\r\n    };\r\n\r\n    return (\r\n        <GameContainer>\r\n            <GamePlayer>\r\n                <Board\r\n                    knightPosition={knightPosition}\r\n                    posHandler={changePosition}\r\n                />\r\n                {/* <Board piecePositions={piecePositions} posHandler={changePosition}/> */}\r\n            </GamePlayer>\r\n        </GameContainer>\r\n    );\r\n};\r\n\r\nexport default Chess;\r\n\r\nfunction connect() {\r\n    gameSocket.onopen = function open() {\r\n        console.log(\"WebSockets connection created.\");\r\n        gameSocket.send(\r\n            JSON.stringify({\r\n                event: \"START\",\r\n                message: \"\",\r\n            })\r\n        );\r\n    };\r\n\r\n    gameSocket.onclose = function (e) {\r\n        console.log(\r\n            \"Socket is closed. Reconnect will be attempted in 1 second.\",\r\n            e.reason\r\n        );\r\n        setTimeout(function () {\r\n            connect();\r\n        }, 1000);\r\n    };\r\n    // Sending the info about the room\r\n    gameSocket.onmessage = function (e) {\r\n        let data = JSON.parse(e.data);\r\n        data = data[\"payload\"];\r\n        let message = data[\"message\"];\r\n        let event = data[\"event\"];\r\n        switch (event) {\r\n            case \"START\":\r\n                reset();\r\n                break;\r\n            case \"END\":\r\n                alert(message);\r\n                reset();\r\n                break;\r\n            case \"MOVE\":\r\n                if (message[\"player\"] != char_choice) {\r\n                    make_move(message[\"index\"], message[\"player\"]);\r\n                    myturn = true;\r\n                    document.getElementById(\"alert_move\").style.display =\r\n                        \"inline\";\r\n                }\r\n                break;\r\n            default:\r\n                console.log(\"No event\");\r\n        }\r\n    };\r\n\r\n    if (gameSocket.readyState == WebSocket.OPEN) {\r\n        gameSocket.onopen();\r\n    }\r\n}\r\n\r\nconnect();\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,gBAApD;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,cAAD,EAAiBC,WAAjB,IAAgCP,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAA9C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACI,MAAMQ,cAAc,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC7BH,WAAW,CAAC,CAACE,CAAD,EAAIC,CAAJ,CAAD,CAAX;IACA;AACR;AACA;EACK,CALD;;EAOA,oBACI,QAAC,aAAD;IAAA,uBACI,QAAC,UAAD;MAAA,uBACI,QAAC,KAAD;QACI,cAAc,EAAEJ,cADpB;QAEI,UAAU,EAAEE;MAFhB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAxCD;;GAAMH,K;;KAAAA,K;AA0CN,eAAeA,KAAf;;AAEA,SAASM,OAAT,GAAmB;EACfC,UAAU,CAACC,MAAX,GAAoB,SAASC,IAAT,GAAgB;IAChCC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACAJ,UAAU,CAACK,IAAX,CACIC,IAAI,CAACC,SAAL,CAAe;MACXC,KAAK,EAAE,OADI;MAEXC,OAAO,EAAE;IAFE,CAAf,CADJ;EAMH,CARD;;EAUAT,UAAU,CAACU,OAAX,GAAqB,UAAUC,CAAV,EAAa;IAC9BR,OAAO,CAACC,GAAR,CACI,4DADJ,EAEIO,CAAC,CAACC,MAFN;IAIAC,UAAU,CAAC,YAAY;MACnBd,OAAO;IACV,CAFS,EAEP,IAFO,CAAV;EAGH,CARD,CAXe,CAoBf;;;EACAC,UAAU,CAACc,SAAX,GAAuB,UAAUH,CAAV,EAAa;IAChC,IAAII,IAAI,GAAGT,IAAI,CAACU,KAAL,CAAWL,CAAC,CAACI,IAAb,CAAX;IACAA,IAAI,GAAGA,IAAI,CAAC,SAAD,CAAX;IACA,IAAIN,OAAO,GAAGM,IAAI,CAAC,SAAD,CAAlB;IACA,IAAIP,KAAK,GAAGO,IAAI,CAAC,OAAD,CAAhB;;IACA,QAAQP,KAAR;MACI,KAAK,OAAL;QACIS,KAAK;QACL;;MACJ,KAAK,KAAL;QACIC,KAAK,CAACT,OAAD,CAAL;QACAQ,KAAK;QACL;;MACJ,KAAK,MAAL;QACI,IAAIR,OAAO,CAAC,QAAD,CAAP,IAAqBU,WAAzB,EAAsC;UAClCC,SAAS,CAACX,OAAO,CAAC,OAAD,CAAR,EAAmBA,OAAO,CAAC,QAAD,CAA1B,CAAT;UACAY,MAAM,GAAG,IAAT;UACAC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,OAA5C,GACI,QADJ;QAEH;;QACD;;MACJ;QACItB,OAAO,CAACC,GAAR,CAAY,UAAZ;IAjBR;EAmBH,CAxBD;;EA0BA,IAAIJ,UAAU,CAAC0B,UAAX,IAAyBC,SAAS,CAACC,IAAvC,EAA6C;IACzC5B,UAAU,CAACC,MAAX;EACH;AACJ;;AAEDF,OAAO"},"metadata":{},"sourceType":"module"}