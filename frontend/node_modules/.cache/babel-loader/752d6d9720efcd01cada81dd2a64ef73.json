{"ast":null,"code":"export var initBoardState=function initBoardState(isWhite,boardRotation){var pieceNames=[\"castle_w_1\",\"knight_w_1\",\"bishop_w_1\",\"queen_w\",\"king_w\",\"bishop_w_2\",\"knight_w_2\",\"castle_w_2\",\"pawn_w_1\",\"pawn_w_2\",\"pawn_w_3\",\"pawn_w_4\",\"pawn_w_5\",\"pawn_w_6\",\"pawn_w_7\",\"pawn_w_8\",\"castle_b_1\",\"knight_b_1\",\"bishop_b_1\",\"queen_b\",\"king_b\",\"bishop_b_2\",\"knight_b_2\",\"castle_b_2\",\"pawn_b_1\",\"pawn_b_2\",\"pawn_b_3\",\"pawn_b_4\",\"pawn_b_5\",\"pawn_b_6\",\"pawn_b_7\",\"pawn_b_8\"];var boardState={};for(var i=0;i<32;i++){// First 16 elements in  pieces array are white rest are black\n// Each 8 elements in array is a row\nif(i<16){var row=void 0;if(i<8)row=boardRotation.white[0];else row=boardRotation.white[1];boardState[pieceNames[i]]={row:row,col:i%8,hasMoved:false,isOwner:isWhite,isAlive:true};}else{var _row=void 0;if(i<24)_row=boardRotation.black[0];else _row=boardRotation.black[1];boardState[pieceNames[i]]={row:_row,col:i%8,hasMoved:false,isOwner:!isWhite,isAlive:true};}}return boardState;};","map":{"version":3,"names":["initBoardState","isWhite","boardRotation","pieceNames","boardState","i","row","white","col","hasMoved","isOwner","isAlive","black"],"sources":["C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/src/components/BoardState.js"],"sourcesContent":["export const initBoardState = (isWhite, boardRotation) => {\r\n    const pieceNames = [\r\n        \"castle_w_1\",\r\n        \"knight_w_1\",\r\n        \"bishop_w_1\",\r\n        \"queen_w\",\r\n        \"king_w\",\r\n        \"bishop_w_2\",\r\n        \"knight_w_2\",\r\n        \"castle_w_2\",\r\n        \"pawn_w_1\",\r\n        \"pawn_w_2\",\r\n        \"pawn_w_3\",\r\n        \"pawn_w_4\",\r\n        \"pawn_w_5\",\r\n        \"pawn_w_6\",\r\n        \"pawn_w_7\",\r\n        \"pawn_w_8\",\r\n        \"castle_b_1\",\r\n        \"knight_b_1\",\r\n        \"bishop_b_1\",\r\n        \"queen_b\",\r\n        \"king_b\",\r\n        \"bishop_b_2\",\r\n        \"knight_b_2\",\r\n        \"castle_b_2\",\r\n        \"pawn_b_1\",\r\n        \"pawn_b_2\",\r\n        \"pawn_b_3\",\r\n        \"pawn_b_4\",\r\n        \"pawn_b_5\",\r\n        \"pawn_b_6\",\r\n        \"pawn_b_7\",\r\n        \"pawn_b_8\",\r\n    ];\r\n    const boardState = {};\r\n    for (let i = 0; i < 32; i++) {\r\n        // First 16 elements in  pieces array are white rest are black\r\n        // Each 8 elements in array is a row\r\n        if (i < 16) {\r\n            let row;\r\n            if (i < 8) row = boardRotation.white[0];\r\n            else row = boardRotation.white[1];\r\n            boardState[pieceNames[i]] = {\r\n                row: row,\r\n                col: i % 8,\r\n                hasMoved: false,\r\n                isOwner: isWhite,\r\n                isAlive: true,\r\n            };\r\n        } else {\r\n            let row;\r\n            if (i < 24) row = boardRotation.black[0];\r\n            else row = boardRotation.black[1];\r\n            boardState[pieceNames[i]] = {\r\n                row: row,\r\n                col: i % 8,\r\n                hasMoved: false,\r\n                isOwner: !isWhite,\r\n                isAlive: true,\r\n            };\r\n        }\r\n    }\r\n    return boardState;\r\n};\r\n"],"mappings":"AAAA,MAAO,IAAMA,eAAc,CAAG,QAAjBA,eAAiB,CAACC,OAAD,CAAUC,aAAV,CAA4B,CACtD,GAAMC,WAAU,CAAG,CACf,YADe,CAEf,YAFe,CAGf,YAHe,CAIf,SAJe,CAKf,QALe,CAMf,YANe,CAOf,YAPe,CAQf,YARe,CASf,UATe,CAUf,UAVe,CAWf,UAXe,CAYf,UAZe,CAaf,UAbe,CAcf,UAde,CAef,UAfe,CAgBf,UAhBe,CAiBf,YAjBe,CAkBf,YAlBe,CAmBf,YAnBe,CAoBf,SApBe,CAqBf,QArBe,CAsBf,YAtBe,CAuBf,YAvBe,CAwBf,YAxBe,CAyBf,UAzBe,CA0Bf,UA1Be,CA2Bf,UA3Be,CA4Bf,UA5Be,CA6Bf,UA7Be,CA8Bf,UA9Be,CA+Bf,UA/Be,CAgCf,UAhCe,CAAnB,CAkCA,GAAMC,WAAU,CAAG,EAAnB,CACA,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,CACzB;AACA;AACA,GAAIA,CAAC,CAAG,EAAR,CAAY,CACR,GAAIC,IAAG,OAAP,CACA,GAAID,CAAC,CAAG,CAAR,CAAWC,GAAG,CAAGJ,aAAa,CAACK,KAAd,CAAoB,CAApB,CAAN,CAAX,IACKD,IAAG,CAAGJ,aAAa,CAACK,KAAd,CAAoB,CAApB,CAAN,CACLH,UAAU,CAACD,UAAU,CAACE,CAAD,CAAX,CAAV,CAA4B,CACxBC,GAAG,CAAEA,GADmB,CAExBE,GAAG,CAAEH,CAAC,CAAG,CAFe,CAGxBI,QAAQ,CAAE,KAHc,CAIxBC,OAAO,CAAET,OAJe,CAKxBU,OAAO,CAAE,IALe,CAA5B,CAOH,CAXD,IAWO,CACH,GAAIL,KAAG,OAAP,CACA,GAAID,CAAC,CAAG,EAAR,CAAYC,IAAG,CAAGJ,aAAa,CAACU,KAAd,CAAoB,CAApB,CAAN,CAAZ,IACKN,KAAG,CAAGJ,aAAa,CAACU,KAAd,CAAoB,CAApB,CAAN,CACLR,UAAU,CAACD,UAAU,CAACE,CAAD,CAAX,CAAV,CAA4B,CACxBC,GAAG,CAAEA,IADmB,CAExBE,GAAG,CAAEH,CAAC,CAAG,CAFe,CAGxBI,QAAQ,CAAE,KAHc,CAIxBC,OAAO,CAAE,CAACT,OAJc,CAKxBU,OAAO,CAAE,IALe,CAA5B,CAOH,CACJ,CACD,MAAOP,WAAP,CACH,CAhEM"},"metadata":{},"sourceType":"module"}