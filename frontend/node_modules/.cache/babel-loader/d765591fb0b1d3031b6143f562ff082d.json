{"ast":null,"code":"import _slicedToArray from\"C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var knightPosition=[0,0];export function moveKnight(toX,toY,posHandler){knightPosition=[toX,toY];posHandler(toX,toY);}export function canMoveKnight(toX,toY){var _knightPosition=knightPosition,_knightPosition2=_slicedToArray(_knightPosition,2),x=_knightPosition2[0],y=_knightPosition2[1];var dx=toX-x;var dy=toY-y;return Math.abs(dx)===2&&Math.abs(dy)===1||Math.abs(dx)===1&&Math.abs(dy)===2;}","map":{"version":3,"names":["knightPosition","moveKnight","toX","toY","posHandler","canMoveKnight","x","y","dx","dy","Math","abs"],"sources":["C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/src/components/Game.js"],"sourcesContent":["let knightPosition = [0,0]\r\n\r\nexport function moveKnight(toX, toY, posHandler) {\r\n    knightPosition = [toX, toY]\r\n    posHandler(toX, toY)\r\n}\r\n\r\nexport function canMoveKnight(toX, toY) {\r\n    const [x, y] = knightPosition\r\n    const dx = toX - x\r\n    const dy = toY - y\r\n  \r\n    return (\r\n      (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\r\n      (Math.abs(dx) === 1 && Math.abs(dy) === 2)\r\n    )\r\n  }"],"mappings":"8JAAA,GAAIA,eAAc,CAAG,CAAC,CAAD,CAAG,CAAH,CAArB,CAEA,MAAO,SAASC,WAAT,CAAoBC,GAApB,CAAyBC,GAAzB,CAA8BC,UAA9B,CAA0C,CAC7CJ,cAAc,CAAG,CAACE,GAAD,CAAMC,GAAN,CAAjB,CACAC,UAAU,CAACF,GAAD,CAAMC,GAAN,CAAV,CACH,CAED,MAAO,SAASE,cAAT,CAAuBH,GAAvB,CAA4BC,GAA5B,CAAiC,CACpC,oBAAeH,cAAf,oDAAOM,CAAP,qBAAUC,CAAV,qBACA,GAAMC,GAAE,CAAGN,GAAG,CAAGI,CAAjB,CACA,GAAMG,GAAE,CAAGN,GAAG,CAAGI,CAAjB,CAEA,MACGG,KAAI,CAACC,GAAL,CAASH,EAAT,IAAiB,CAAjB,EAAsBE,IAAI,CAACC,GAAL,CAASF,EAAT,IAAiB,CAAxC,EACCC,IAAI,CAACC,GAAL,CAASH,EAAT,IAAiB,CAAjB,EAAsBE,IAAI,CAACC,GAAL,CAASF,EAAT,IAAiB,CAF1C,CAID"},"metadata":{},"sourceType":"module"}