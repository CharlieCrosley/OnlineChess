{"ast":null,"code":"export const boardState = (isWhite, boardRotation) => {\n  return {\n    castle_w_1: {\n      row: boardRotation.white[0],\n      col: 0,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    knight_w_1: {\n      row: boardRotation.white[0],\n      col: 1,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    bishop_w_1: {\n      row: boardRotation.white[0],\n      col: 2,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    queen_w: {\n      row: boardRotation.white[0],\n      col: 3,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    king_w: {\n      row: boardRotation.white[0],\n      col: 4,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    castle_w_2: {\n      row: boardRotation.white[0],\n      col: 7,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    knight_w_2: {\n      row: boardRotation.white[0],\n      col: 6,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    bishop_w_2: {\n      row: boardRotation.white[0],\n      col: 5,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_1: {\n      row: boardRotation.white[1],\n      col: 0,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_2: {\n      row: boardRotation.white[1],\n      col: 1,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_3: {\n      row: boardRotation.white[1],\n      col: 2,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_4: {\n      row: boardRotation.white[1],\n      col: 3,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_5: {\n      row: boardRotation.white[1],\n      col: 4,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_6: {\n      row: boardRotation.white[1],\n      col: 5,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_7: {\n      row: boardRotation.white[1],\n      col: 6,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_8: {\n      row: boardRotation.white[1],\n      col: 7,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    castle_b_1: {\n      row: boardRotation.black[0],\n      col: 0,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    knight_b_1: {\n      row: boardRotation.black[0],\n      col: 1,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    bishop_b_1: {\n      row: boardRotation.black[0],\n      col: 2,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    queen_b: {\n      row: boardRotation.black[0],\n      col: 3,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    king_b: {\n      row: boardRotation.black[0],\n      col: 4,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    castle_b_2: {\n      row: boardRotation.black[0],\n      col: 7,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    knight_b_2: {\n      row: boardRotation.black[0],\n      col: 6,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    bishop_b_2: {\n      row: boardRotation.black[0],\n      col: 5,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_1: {\n      row: boardRotation.black[1],\n      col: 0,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_2: {\n      row: boardRotation.black[1],\n      col: 1,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_3: {\n      row: boardRotation.black[1],\n      col: 2,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_4: {\n      row: boardRotation.black[1],\n      col: 3,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_5: {\n      row: boardRotation.black[1],\n      col: 4,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_6: {\n      row: boardRotation.black[1],\n      col: 5,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_7: {\n      row: boardRotation.black[1],\n      col: 6,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_8: {\n      row: boardRotation.black[1],\n      col: 7,\n      hasMoved: false,\n      isOwner: !isWhite\n    }\n  };\n};","map":{"version":3,"names":["boardState","isWhite","boardRotation","castle_w_1","row","white","col","hasMoved","isOwner","knight_w_1","bishop_w_1","queen_w","king_w","castle_w_2","knight_w_2","bishop_w_2","pawn_w_1","pawn_w_2","pawn_w_3","pawn_w_4","pawn_w_5","pawn_w_6","pawn_w_7","pawn_w_8","castle_b_1","black","knight_b_1","bishop_b_1","queen_b","king_b","castle_b_2","knight_b_2","bishop_b_2","pawn_b_1","pawn_b_2","pawn_b_3","pawn_b_4","pawn_b_5","pawn_b_6","pawn_b_7","pawn_b_8"],"sources":["C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/src/components/BoardState.js"],"sourcesContent":["export const boardState = (isWhite, boardRotation) => {\r\n    return {\r\n        castle_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        knight_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        bishop_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        queen_w: {\r\n            row: boardRotation.white[0],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        king_w: {\r\n            row: boardRotation.white[0],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        castle_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        knight_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        bishop_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_1: {\r\n            row: boardRotation.white[1],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_2: {\r\n            row: boardRotation.white[1],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_3: {\r\n            row: boardRotation.white[1],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_4: {\r\n            row: boardRotation.white[1],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_5: {\r\n            row: boardRotation.white[1],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_6: {\r\n            row: boardRotation.white[1],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_7: {\r\n            row: boardRotation.white[1],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_8: {\r\n            row: boardRotation.white[1],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n\r\n        castle_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        knight_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        bishop_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        queen_b: {\r\n            row: boardRotation.black[0],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        king_b: {\r\n            row: boardRotation.black[0],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        castle_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        knight_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        bishop_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_1: {\r\n            row: boardRotation.black[1],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_2: {\r\n            row: boardRotation.black[1],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_3: {\r\n            row: boardRotation.black[1],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_4: {\r\n            row: boardRotation.black[1],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_5: {\r\n            row: boardRotation.black[1],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_6: {\r\n            row: boardRotation.black[1],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_7: {\r\n            row: boardRotation.black[1],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_8: {\r\n            row: boardRotation.black[1],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n    };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}