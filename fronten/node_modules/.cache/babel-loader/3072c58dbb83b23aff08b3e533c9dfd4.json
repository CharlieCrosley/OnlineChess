{"ast":null,"code":"export function movePiece(toX, toY, posHandler, item) {\n  posHandler(prevState => ({ ...prevState,\n    [item.pieceName]: {\n      row: toY,\n      col: toX,\n      hasMoved: true,\n      isOwner: true\n    }\n  }));\n}\nexport function canMovePiece(toX, toY, item, boardState, monitor) {\n  const dx = toX - item.pieceState.col;\n  const dy = toY - item.pieceState.row;\n  const pieceName = item.pieceName.split(\"_\")[0];\n  const square = squareIsEmpty(toX, toY, boardState);\n\n  if (square != null) {\n    if (!square.isOwner) {\n      console.log(square);\n      square.isAlive = false;\n    }\n  }\n\n  switch (pieceName) {\n    case \"castle\":\n      return Math.abs(dx) === 0 && Math.abs(dy) > 0 || Math.abs(dx) > 0 && Math.abs(dy) === 0;\n\n    case \"knight\":\n      return Math.abs(dx) === 2 && Math.abs(dy) === 1 || Math.abs(dx) === 1 && Math.abs(dy) === 2;\n\n    case \"bishop\":\n      return !(Math.abs(dx) === 0 && Math.abs(dy) > 0) && !(Math.abs(dx) > 0 && Math.abs(dy) === 0) && (Math.abs(dx) === Math.abs(dy) || Math.abs(dx) === Math.abs(dy));\n\n    case \"queen\":\n      return Math.abs(dx) === 0 && Math.abs(dy) > 0 || Math.abs(dx) > 0 && Math.abs(dy) === 0 || Math.abs(dx) === Math.abs(dy) || Math.abs(dx) === Math.abs(dy);\n\n    case \"king\":\n      return (Math.abs(dx) === 1 || Math.abs(dx) === 0) && (Math.abs(dy) === 1 || Math.abs(dy) === 0);\n\n    case \"pawn\":\n      if (!item.pieceState.hasMoved) // Negative direction moves up the board (player always at bottom)\n        return Math.abs(dx) === 0 && (dy === -1 || dy === -2);\n      return dx === 0 && dy === -1;\n\n    default:\n      break;\n  }\n}\n\nfunction squareIsEmpty(x, y, boardState) {\n  for (const [piece, state] of Object.entries(boardState)) {\n    if (x === state.col && y === state.row) {\n      return {\n        piece,\n        state\n      };\n    }\n  }\n\n  return null;\n}","map":{"version":3,"names":["movePiece","toX","toY","posHandler","item","prevState","pieceName","row","col","hasMoved","isOwner","canMovePiece","boardState","monitor","dx","pieceState","dy","split","square","squareIsEmpty","console","log","isAlive","Math","abs","x","y","piece","state","Object","entries"],"sources":["C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/src/components/Game.js"],"sourcesContent":["export function movePiece(toX, toY, posHandler, item) {\r\n    posHandler((prevState) => ({\r\n        ...prevState,\r\n        [item.pieceName]: { row: toY, col: toX, hasMoved: true, isOwner: true },\r\n    }));\r\n}\r\n\r\nexport function canMovePiece(toX, toY, item, boardState, monitor) {\r\n    const dx = toX - item.pieceState.col;\r\n    const dy = toY - item.pieceState.row;\r\n\r\n    const pieceName = item.pieceName.split(\"_\")[0];\r\n\r\n    const square = squareIsEmpty(toX, toY, boardState);\r\n    if (square != null) {\r\n        if (!square.isOwner) {\r\n            console.log(square);\r\n            square.isAlive = false;\r\n        }\r\n    }\r\n\r\n    switch (pieceName) {\r\n        case \"castle\":\r\n            return (\r\n                (Math.abs(dx) === 0 && Math.abs(dy) > 0) ||\r\n                (Math.abs(dx) > 0 && Math.abs(dy) === 0)\r\n            );\r\n\r\n        case \"knight\":\r\n            return (\r\n                (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\r\n                (Math.abs(dx) === 1 && Math.abs(dy) === 2)\r\n            );\r\n\r\n        case \"bishop\":\r\n            return (\r\n                !(Math.abs(dx) === 0 && Math.abs(dy) > 0) &&\r\n                !(Math.abs(dx) > 0 && Math.abs(dy) === 0) &&\r\n                (Math.abs(dx) === Math.abs(dy) || Math.abs(dx) === Math.abs(dy))\r\n            );\r\n\r\n        case \"queen\":\r\n            return (\r\n                (Math.abs(dx) === 0 && Math.abs(dy) > 0) ||\r\n                (Math.abs(dx) > 0 && Math.abs(dy) === 0) ||\r\n                Math.abs(dx) === Math.abs(dy) ||\r\n                Math.abs(dx) === Math.abs(dy)\r\n            );\r\n\r\n        case \"king\":\r\n            return (\r\n                (Math.abs(dx) === 1 || Math.abs(dx) === 0) &&\r\n                (Math.abs(dy) === 1 || Math.abs(dy) === 0)\r\n            );\r\n\r\n        case \"pawn\":\r\n            if (!item.pieceState.hasMoved)\r\n                // Negative direction moves up the board (player always at bottom)\r\n                return Math.abs(dx) === 0 && (dy === -1 || dy === -2);\r\n            return dx === 0 && dy === -1;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nfunction squareIsEmpty(x, y, boardState) {\r\n    for (const [piece, state] of Object.entries(boardState)) {\r\n        if (x === state.col && y === state.row) {\r\n            return { piece, state };\r\n        }\r\n    }\r\n    return null;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}