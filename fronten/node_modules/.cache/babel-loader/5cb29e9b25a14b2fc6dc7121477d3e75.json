{"ast":null,"code":"export const initBoardState = (isWhite, boardRotation) => {\n  return {\n    castle_w_1: {\n      row: boardRotation.white[0],\n      col: 0,\n      hasMoved: false,\n      isOwner: isWhite,\n      alive: true\n    },\n    knight_w_1: {\n      row: boardRotation.white[0],\n      col: 1,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    bishop_w_1: {\n      row: boardRotation.white[0],\n      col: 2,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    queen_w: {\n      row: boardRotation.white[0],\n      col: 3,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    king_w: {\n      row: boardRotation.white[0],\n      col: 4,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    castle_w_2: {\n      row: boardRotation.white[0],\n      col: 7,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    knight_w_2: {\n      row: boardRotation.white[0],\n      col: 6,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    bishop_w_2: {\n      row: boardRotation.white[0],\n      col: 5,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_1: {\n      row: boardRotation.white[1],\n      col: 0,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_2: {\n      row: boardRotation.white[1],\n      col: 1,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_3: {\n      row: boardRotation.white[1],\n      col: 2,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_4: {\n      row: boardRotation.white[1],\n      col: 3,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_5: {\n      row: boardRotation.white[1],\n      col: 4,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_6: {\n      row: boardRotation.white[1],\n      col: 5,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_7: {\n      row: boardRotation.white[1],\n      col: 6,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    pawn_w_8: {\n      row: boardRotation.white[1],\n      col: 7,\n      hasMoved: false,\n      isOwner: isWhite\n    },\n    castle_b_1: {\n      row: boardRotation.black[0],\n      col: 0,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    knight_b_1: {\n      row: boardRotation.black[0],\n      col: 1,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    bishop_b_1: {\n      row: boardRotation.black[0],\n      col: 2,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    queen_b: {\n      row: boardRotation.black[0],\n      col: 3,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    king_b: {\n      row: boardRotation.black[0],\n      col: 4,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    castle_b_2: {\n      row: boardRotation.black[0],\n      col: 7,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    knight_b_2: {\n      row: boardRotation.black[0],\n      col: 6,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    bishop_b_2: {\n      row: boardRotation.black[0],\n      col: 5,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_1: {\n      row: boardRotation.black[1],\n      col: 0,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_2: {\n      row: boardRotation.black[1],\n      col: 1,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_3: {\n      row: boardRotation.black[1],\n      col: 2,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_4: {\n      row: boardRotation.black[1],\n      col: 3,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_5: {\n      row: boardRotation.black[1],\n      col: 4,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_6: {\n      row: boardRotation.black[1],\n      col: 5,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_7: {\n      row: boardRotation.black[1],\n      col: 6,\n      hasMoved: false,\n      isOwner: !isWhite\n    },\n    pawn_b_8: {\n      row: boardRotation.black[1],\n      col: 7,\n      hasMoved: false,\n      isOwner: !isWhite\n    }\n  };\n};","map":{"version":3,"names":["initBoardState","isWhite","boardRotation","castle_w_1","row","white","col","hasMoved","isOwner","alive","knight_w_1","bishop_w_1","queen_w","king_w","castle_w_2","knight_w_2","bishop_w_2","pawn_w_1","pawn_w_2","pawn_w_3","pawn_w_4","pawn_w_5","pawn_w_6","pawn_w_7","pawn_w_8","castle_b_1","black","knight_b_1","bishop_b_1","queen_b","king_b","castle_b_2","knight_b_2","bishop_b_2","pawn_b_1","pawn_b_2","pawn_b_3","pawn_b_4","pawn_b_5","pawn_b_6","pawn_b_7","pawn_b_8"],"sources":["C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/src/components/BoardState.js"],"sourcesContent":["export const initBoardState = (isWhite, boardRotation) => {\r\n    return {\r\n        castle_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        knight_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        bishop_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        queen_w: {\r\n            row: boardRotation.white[0],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        king_w: {\r\n            row: boardRotation.white[0],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        castle_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        knight_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        bishop_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_1: {\r\n            row: boardRotation.white[1],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_2: {\r\n            row: boardRotation.white[1],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_3: {\r\n            row: boardRotation.white[1],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_4: {\r\n            row: boardRotation.white[1],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_5: {\r\n            row: boardRotation.white[1],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_6: {\r\n            row: boardRotation.white[1],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_7: {\r\n            row: boardRotation.white[1],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_8: {\r\n            row: boardRotation.white[1],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n\r\n        castle_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        knight_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        bishop_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        queen_b: {\r\n            row: boardRotation.black[0],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        king_b: {\r\n            row: boardRotation.black[0],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        castle_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        knight_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        bishop_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_1: {\r\n            row: boardRotation.black[1],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_2: {\r\n            row: boardRotation.black[1],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_3: {\r\n            row: boardRotation.black[1],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_4: {\r\n            row: boardRotation.black[1],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_5: {\r\n            row: boardRotation.black[1],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_6: {\r\n            row: boardRotation.black[1],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_7: {\r\n            row: boardRotation.black[1],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n        pawn_b_8: {\r\n            row: boardRotation.black[1],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n        },\r\n    };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}