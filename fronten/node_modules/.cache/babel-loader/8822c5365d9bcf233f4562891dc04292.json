{"ast":null,"code":"export const initBoardState = (isWhite, boardRotation) => {\n  const pieceNames = [\"castle_w_1\", \"knight_w_1\", \"bishop_w_1\", \"queen_w\", \"king_w\", \"bishop_w_2\", \"knight_w_2\", \"castle_w_2\", \"pawn_w_1\", \"pawn_w_2\", \"pawn_w_3\", \"pawn_w_4\", \"pawn_w_5\", \"pawn_w_6\", \"pawn_w_7\", \"pawn_w_8\", \"castle_b_1\", \"knight_b_1\", \"bishop_b_1\", \"queen_b\", \"king_b\", \"bishop_b_2\", \"knight_b_2\", \"castle_b_2\", \"pawn_b_1\", \"pawn_b_2\", \"pawn_b_3\", \"pawn_b_4\", \"pawn_b_5\", \"pawn_b_6\", \"pawn_b_7\", \"pawn_b_8\"];\n  const boardState = {};\n\n  for (let i = 0; i < 32; i++) {\n    if (i < 16) boardState[pieceNames[i]] = {\n      row: boardRotation.white[0],\n      col: i % 8,\n      hasMoved: false,\n      isOwner: isWhite,\n      isAlive: true\n    };else boardState[pieceNames[i]] = {\n      row: boardRotation.black[0],\n      col: i % 8,\n      hasMoved: false,\n      isOwner: isWhite,\n      isAlive: true\n    };\n  }\n\n  console.log(boardState);\n  return boardState;\n  /* return {\r\n      castle_w_1: {\r\n          row: boardRotation.white[0],\r\n          col: 0,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      knight_w_1: {\r\n          row: boardRotation.white[0],\r\n          col: 1,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          isAlive: true,\r\n      },\r\n      bishop_w_1: {\r\n          row: boardRotation.white[0],\r\n          col: 2,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      queen_w: {\r\n          row: boardRotation.white[0],\r\n          col: 3,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      king_w: {\r\n          row: boardRotation.white[0],\r\n          col: 4,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      castle_w_2: {\r\n          row: boardRotation.white[0],\r\n          col: 7,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      knight_w_2: {\r\n          row: boardRotation.white[0],\r\n          col: 6,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      bishop_w_2: {\r\n          row: boardRotation.white[0],\r\n          col: 5,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_w_1: {\r\n          row: boardRotation.white[1],\r\n          col: 0,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_w_2: {\r\n          row: boardRotation.white[1],\r\n          col: 1,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_w_3: {\r\n          row: boardRotation.white[1],\r\n          col: 2,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_w_4: {\r\n          row: boardRotation.white[1],\r\n          col: 3,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n      },\r\n      pawn_w_5: {\r\n          row: boardRotation.white[1],\r\n          col: 4,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_w_6: {\r\n          row: boardRotation.white[1],\r\n          col: 5,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_w_7: {\r\n          row: boardRotation.white[1],\r\n          col: 6,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_w_8: {\r\n          row: boardRotation.white[1],\r\n          col: 7,\r\n          hasMoved: false,\r\n          isOwner: isWhite,\r\n          alive: true,\r\n      },\r\n        castle_b_1: {\r\n          row: boardRotation.black[0],\r\n          col: 0,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      knight_b_1: {\r\n          row: boardRotation.black[0],\r\n          col: 1,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      bishop_b_1: {\r\n          row: boardRotation.black[0],\r\n          col: 2,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      queen_b: {\r\n          row: boardRotation.black[0],\r\n          col: 3,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      king_b: {\r\n          row: boardRotation.black[0],\r\n          col: 4,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      castle_b_2: {\r\n          row: boardRotation.black[0],\r\n          col: 7,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      knight_b_2: {\r\n          row: boardRotation.black[0],\r\n          col: 6,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      bishop_b_2: {\r\n          row: boardRotation.black[0],\r\n          col: 5,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_b_1: {\r\n          row: boardRotation.black[1],\r\n          col: 0,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_b_2: {\r\n          row: boardRotation.black[1],\r\n          col: 1,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_b_3: {\r\n          row: boardRotation.black[1],\r\n          col: 2,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_b_4: {\r\n          row: boardRotation.black[1],\r\n          col: 3,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_b_5: {\r\n          row: boardRotation.black[1],\r\n          col: 4,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_b_6: {\r\n          row: boardRotation.black[1],\r\n          col: 5,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_b_7: {\r\n          row: boardRotation.black[1],\r\n          col: 6,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n      pawn_b_8: {\r\n          row: boardRotation.black[1],\r\n          col: 7,\r\n          hasMoved: false,\r\n          isOwner: !isWhite,\r\n          alive: true,\r\n      },\r\n  }; */\n};","map":{"version":3,"names":["initBoardState","isWhite","boardRotation","pieceNames","boardState","i","row","white","col","hasMoved","isOwner","isAlive","black","console","log"],"sources":["C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/src/components/BoardState.js"],"sourcesContent":["export const initBoardState = (isWhite, boardRotation) => {\r\n    const pieceNames = [\r\n        \"castle_w_1\",\r\n        \"knight_w_1\",\r\n        \"bishop_w_1\",\r\n        \"queen_w\",\r\n        \"king_w\",\r\n        \"bishop_w_2\",\r\n        \"knight_w_2\",\r\n        \"castle_w_2\",\r\n        \"pawn_w_1\",\r\n        \"pawn_w_2\",\r\n        \"pawn_w_3\",\r\n        \"pawn_w_4\",\r\n        \"pawn_w_5\",\r\n        \"pawn_w_6\",\r\n        \"pawn_w_7\",\r\n        \"pawn_w_8\",\r\n        \"castle_b_1\",\r\n        \"knight_b_1\",\r\n        \"bishop_b_1\",\r\n        \"queen_b\",\r\n        \"king_b\",\r\n        \"bishop_b_2\",\r\n        \"knight_b_2\",\r\n        \"castle_b_2\",\r\n        \"pawn_b_1\",\r\n        \"pawn_b_2\",\r\n        \"pawn_b_3\",\r\n        \"pawn_b_4\",\r\n        \"pawn_b_5\",\r\n        \"pawn_b_6\",\r\n        \"pawn_b_7\",\r\n        \"pawn_b_8\",\r\n    ];\r\n    const boardState = {};\r\n    for (let i = 0; i < 32; i++) {\r\n        if (i < 16)\r\n            boardState[pieceNames[i]] = {\r\n                row: boardRotation.white[0],\r\n                col: i % 8,\r\n                hasMoved: false,\r\n                isOwner: isWhite,\r\n                isAlive: true,\r\n            };\r\n        else\r\n            boardState[pieceNames[i]] = {\r\n                row: boardRotation.black[0],\r\n                col: i % 8,\r\n                hasMoved: false,\r\n                isOwner: isWhite,\r\n                isAlive: true,\r\n            };\r\n    }\r\n    console.log(boardState);\r\n    return boardState;\r\n    /* return {\r\n        castle_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        knight_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            isAlive: true,\r\n        },\r\n        bishop_w_1: {\r\n            row: boardRotation.white[0],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        queen_w: {\r\n            row: boardRotation.white[0],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        king_w: {\r\n            row: boardRotation.white[0],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        castle_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        knight_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        bishop_w_2: {\r\n            row: boardRotation.white[0],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_w_1: {\r\n            row: boardRotation.white[1],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_w_2: {\r\n            row: boardRotation.white[1],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_w_3: {\r\n            row: boardRotation.white[1],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_w_4: {\r\n            row: boardRotation.white[1],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n        },\r\n        pawn_w_5: {\r\n            row: boardRotation.white[1],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_w_6: {\r\n            row: boardRotation.white[1],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_w_7: {\r\n            row: boardRotation.white[1],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_w_8: {\r\n            row: boardRotation.white[1],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: isWhite,\r\n            alive: true,\r\n        },\r\n\r\n        castle_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        knight_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        bishop_b_1: {\r\n            row: boardRotation.black[0],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        queen_b: {\r\n            row: boardRotation.black[0],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        king_b: {\r\n            row: boardRotation.black[0],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        castle_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        knight_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        bishop_b_2: {\r\n            row: boardRotation.black[0],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_b_1: {\r\n            row: boardRotation.black[1],\r\n            col: 0,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_b_2: {\r\n            row: boardRotation.black[1],\r\n            col: 1,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_b_3: {\r\n            row: boardRotation.black[1],\r\n            col: 2,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_b_4: {\r\n            row: boardRotation.black[1],\r\n            col: 3,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_b_5: {\r\n            row: boardRotation.black[1],\r\n            col: 4,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_b_6: {\r\n            row: boardRotation.black[1],\r\n            col: 5,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_b_7: {\r\n            row: boardRotation.black[1],\r\n            col: 6,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n        pawn_b_8: {\r\n            row: boardRotation.black[1],\r\n            col: 7,\r\n            hasMoved: false,\r\n            isOwner: !isWhite,\r\n            alive: true,\r\n        },\r\n    }; */\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,OAAD,EAAUC,aAAV,KAA4B;EACtD,MAAMC,UAAU,GAAG,CACf,YADe,EAEf,YAFe,EAGf,YAHe,EAIf,SAJe,EAKf,QALe,EAMf,YANe,EAOf,YAPe,EAQf,YARe,EASf,UATe,EAUf,UAVe,EAWf,UAXe,EAYf,UAZe,EAaf,UAbe,EAcf,UAde,EAef,UAfe,EAgBf,UAhBe,EAiBf,YAjBe,EAkBf,YAlBe,EAmBf,YAnBe,EAoBf,SApBe,EAqBf,QArBe,EAsBf,YAtBe,EAuBf,YAvBe,EAwBf,YAxBe,EAyBf,UAzBe,EA0Bf,UA1Be,EA2Bf,UA3Be,EA4Bf,UA5Be,EA6Bf,UA7Be,EA8Bf,UA9Be,EA+Bf,UA/Be,EAgCf,UAhCe,CAAnB;EAkCA,MAAMC,UAAU,GAAG,EAAnB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;IACzB,IAAIA,CAAC,GAAG,EAAR,EACID,UAAU,CAACD,UAAU,CAACE,CAAD,CAAX,CAAV,GAA4B;MACxBC,GAAG,EAAEJ,aAAa,CAACK,KAAd,CAAoB,CAApB,CADmB;MAExBC,GAAG,EAAEH,CAAC,GAAG,CAFe;MAGxBI,QAAQ,EAAE,KAHc;MAIxBC,OAAO,EAAET,OAJe;MAKxBU,OAAO,EAAE;IALe,CAA5B,CADJ,KASIP,UAAU,CAACD,UAAU,CAACE,CAAD,CAAX,CAAV,GAA4B;MACxBC,GAAG,EAAEJ,aAAa,CAACU,KAAd,CAAoB,CAApB,CADmB;MAExBJ,GAAG,EAAEH,CAAC,GAAG,CAFe;MAGxBI,QAAQ,EAAE,KAHc;MAIxBC,OAAO,EAAET,OAJe;MAKxBU,OAAO,EAAE;IALe},"metadata":{},"sourceType":"module"}