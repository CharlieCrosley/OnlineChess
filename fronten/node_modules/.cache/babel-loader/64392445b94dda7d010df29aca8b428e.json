{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charl\\\\Documents\\\\Code\\\\Web Dev\\\\Chess-Online\\\\chessproject\\\\frontend\\\\src\\\\components\\\\BoardSquare.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from \"react\";\nimport { Square } from \"./ChessElements\";\nimport { ItemTypes } from \"./Constants\";\nimport { useDrop } from \"react-dnd\";\nimport { canMovePiece, movePiece } from \"./Game\";\nimport { PossibleMoveDot, MoveHoverHighlight } from \"./ChessElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoardSquare(_ref) {\n  _s();\n\n  let {\n    x,\n    y,\n    children,\n    posHandler,\n    boardState\n  } = _ref;\n  const [isAlive, setAlive] = useState(true);\n  const dark = (x + y) % 2 === 1;\n  const [{\n    isOver,\n    canDrop,\n    item\n  }, drop] = useDrop(() => ({\n    accept: [ItemTypes.PIECE],\n    canDrop: item => canMovePiece(x, y, item, boardState),\n    drop: item => movePiece(x, y, posHandler, item, boardState, setAlive),\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n      item: monitor.getItem()\n    })\n  }), [x, y]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [console.log(item), /*#__PURE__*/_jsxDEV(Square, {\n      dark: dark,\n      children: isAlive && children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), !isOver && canDrop && /*#__PURE__*/_jsxDEV(PossibleMoveDot, {\n      dark: dark\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 36\n    }, this), isOver && canDrop && /*#__PURE__*/_jsxDEV(MoveHoverHighlight, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BoardSquare, \"xjaI8nx6K7M+J5kvi6vJHMJLo8Y=\", false, function () {\n  return [useDrop];\n});\n\n_c = BoardSquare;\nexport default _c2 = /*#__PURE__*/memo(BoardSquare);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardSquare\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","Square","ItemTypes","useDrop","canMovePiece","movePiece","PossibleMoveDot","MoveHoverHighlight","BoardSquare","x","y","children","posHandler","boardState","isAlive","setAlive","dark","isOver","canDrop","item","drop","accept","PIECE","collect","monitor","getItem","position","width","height","console","log"],"sources":["C:/Users/charl/Documents/Code/Web Dev/Chess-Online/chessproject/frontend/src/components/BoardSquare.js"],"sourcesContent":["import React, { memo, useState } from \"react\";\r\nimport { Square } from \"./ChessElements\";\r\nimport { ItemTypes } from \"./Constants\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { canMovePiece, movePiece } from \"./Game\";\r\nimport { PossibleMoveDot, MoveHoverHighlight } from \"./ChessElements\";\r\n\r\nfunction BoardSquare({ x, y, children, posHandler, boardState }) {\r\n    const [isAlive, setAlive] = useState(true);\r\n\r\n    const dark = (x + y) % 2 === 1;\r\n    const [{ isOver, canDrop, item }, drop] = useDrop(\r\n        () => ({\r\n            accept: [ItemTypes.PIECE],\r\n            canDrop: (item) => canMovePiece(x, y, item, boardState),\r\n            drop: (item) =>\r\n                movePiece(x, y, posHandler, item, boardState, setAlive),\r\n            collect: (monitor) => ({\r\n                isOver: !!monitor.isOver(),\r\n                canDrop: !!monitor.canDrop(),\r\n                item: monitor.getItem(),\r\n            }),\r\n        }),\r\n        [x, y]\r\n    );\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            style={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            {console.log(item)}\r\n            <Square dark={dark}>{isAlive && children}</Square>\r\n\r\n            {!isOver && canDrop && <PossibleMoveDot dark={dark} />}\r\n            {isOver && canDrop && <MoveHoverHighlight />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(BoardSquare);\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,QAAxC;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,iBAApD;;;AAEA,SAASC,WAAT,OAAiE;EAAA;;EAAA,IAA5C;IAAEC,CAAF;IAAKC,CAAL;IAAQC,QAAR;IAAkBC,UAAlB;IAA8BC;EAA9B,CAA4C;EAC7D,MAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBf,QAAQ,CAAC,IAAD,CAApC;EAEA,MAAMgB,IAAI,GAAG,CAACP,CAAC,GAAGC,CAAL,IAAU,CAAV,KAAgB,CAA7B;EACA,MAAM,CAAC;IAAEO,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,CAAD,EAA4BC,IAA5B,IAAoCjB,OAAO,CAC7C,OAAO;IACHkB,MAAM,EAAE,CAACnB,SAAS,CAACoB,KAAX,CADL;IAEHJ,OAAO,EAAGC,IAAD,IAAUf,YAAY,CAACK,CAAD,EAAIC,CAAJ,EAAOS,IAAP,EAAaN,UAAb,CAF5B;IAGHO,IAAI,EAAGD,IAAD,IACFd,SAAS,CAACI,CAAD,EAAIC,CAAJ,EAAOE,UAAP,EAAmBO,IAAnB,EAAyBN,UAAzB,EAAqCE,QAArC,CAJV;IAKHQ,OAAO,EAAGC,OAAD,KAAc;MACnBP,MAAM,EAAE,CAAC,CAACO,OAAO,CAACP,MAAR,EADS;MAEnBC,OAAO,EAAE,CAAC,CAACM,OAAO,CAACN,OAAR,EAFQ;MAGnBC,IAAI,EAAEK,OAAO,CAACC,OAAR;IAHa,CAAd;EALN,CAAP,CAD6C,EAY7C,CAAChB,CAAD,EAAIC,CAAJ,CAZ6C,CAAjD;EAeA,oBACI;IACI,GAAG,EAAEU,IADT;IAEI,KAAK,EAAE;MACHM,QAAQ,EAAE,UADP;MAEHC,KAAK,EAAE,MAFJ;MAGHC,MAAM,EAAE;IAHL,CAFX;IAAA,WAQKC,OAAO,CAACC,GAAR,CAAYX,IAAZ,CARL,eASI,QAAC,MAAD;MAAQ,IAAI,EAAEH,IAAd;MAAA,UAAqBF,OAAO,IAAIH;IAAhC;MAAA;MAAA;MAAA;IAAA,QATJ,EAWK,CAACM,MAAD,IAAWC,OAAX,iBAAsB,QAAC,eAAD;MAAiB,IAAI,EAAEF;IAAvB;MAAA;MAAA;MAAA;IAAA,QAX3B,EAYKC,MAAM,IAAIC,OAAV,iBAAqB,QAAC,kBAAD;MAAA;MAAA;MAAA;IAAA,QAZ1B;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GAnCQV,W;UAIqCL,O;;;KAJrCK,W;AAqCT,kCAAeT,IAAI,CAACS,WAAD,CAAnB"},"metadata":{},"sourceType":"module"}